*---------------------------------------------------------------*
*	Environment and Release notes								*
*---------------------------------------------------------------*

*****************************************************************
*	Tools tree													*
*****************************************************************

\code										(the base tools folder)
\code\boost_1_75_0							(boost libraries)
\code\thrift-0.9.2							(thrift libraries)
\code\thrift								(thrift compiler)
\code\libevent-2.0.22-stable				(used to compile thrift libraries)
\code\openssl-1.1.0f-vs2017					(used to compile thrift libraries)

All libraries has been compiled for both Debug/Release and x86/x64 configurations

*****************************************************************
*	Development tree											*
*****************************************************************

~\ROOT_AFAR_CLOUD
	~\ROOT_AFAR_CLOUD\Common
	~\ROOT_AFAR_CLOUD\HLP					(HLP simulator)
	~\ROOT_AFAR_CLOUD\MLP					(MLP console application)
	~\ROOT_AFAR_CLOUD\MlpCommon				(MLP Common files)
	~\ROOT_AFAR_CLOUD\MlpGui				(MLP GUI application)
	~\ROOT_AFAR_CLOUD\VER.1.1				(Thrift files)
	~\ROOT_AFAR_CLOUD\VER.2.0				(Thrift files)
	gen.bat
	Notes.txt

*****************************************************************
*	Preliminary actions											*
*****************************************************************

In order to correctly compile the application, the following actions must be performed:

1) Based on the current version of thrift files, the following command must be executede, in odrder to generate the source files:
gen <ver>, where <ver> is the folder containing the thrift files. ex.: gen VER.1.1

2) Create the environment variable AFC_VERSION, giving it the value corresponding to the version to compile. ex.: AFC_VERSION=1.1

The currently used version is 2.0

*****************************************************************
*	Application													*
*****************************************************************

After the execution of the genarator batch (gen.bat), the following folder is created:

~\ROOT_AFAR_CLOUD\VER.2.0\gen-cpp (for 2.0 thift files)
It contains the files generated by thrift compiler.
	AFC_constants.cpp
	AFC_constants.h
	AFC_types.cpp
	AFC_types.h
	MissionManagerService.cpp
	MissionManagerService.h
	MissionManagerService_server.skeleton.cpp
	MmtService.cpp
	MmtService.h
	MmtService_server.skeleton.cpp
	PlannerService.cpp
	PlannerService.h
	PlannerService_server.skeleton.cpp
	SemanticQueryService.cpp
	SemanticQueryService.h
	SemanticQueryService_server.skeleton.cpp

The ~\ROOT_AFAR_CLOUD\MlpCommon folder contains the source files used for both console and GUI applications.

	Aggregators.cpp							(Aggregation routines used in coverage planner algorithm)
	AStarPlanner.cpp						(A* planner algorithm)
	AStarPlanner.h
	Configurator.cpp						(Configuration reader)
	Configurator.h
	CoveragePlanner.cpp						(Coverage planner algorithm)
	CoveragePlanner.h
	CoverageProcs.cpp						(Coverage planner procedures)
	CoverageUtils.cpp						(Coverage planner utilities)
	Geometry.cpp							(Geometry functions and utilities)
	Geometry.h
	Planner.cpp								(Planner base class)
	Planner.h
	PlannerHelper.cpp						(Mission planner helper)
	PlannerHelper.h
	PlannerServiceHandler.cpp				(Mission planner service handler)
	PlannerServiceHandler.h

The ~\ROOT_AFAR_CLOUD\MlpGui folder contains the Visual Studio 2017 CPP project source files (GUI application).

	MlpGui.aps
	MlpGui.cpp								(The GUI application)
	MlpGui.h
	MlpGui.rc								(Resources file)
	MlpGui.vcxproj							(Project file)
	MlpGui.vcxproj.filters
	MlpGui.vcxproj.user
	MlpGuiDlg.cpp							(The GUI application dialog box)
	MlpGuiDlg.h
	MLP.json

The file MLP.json contains the MLP configuration, in JSON format.
This file contains information about the possibility to log the incoming and/or outgoing mission.
Moreover, by means of this file, the user can configure the algorithm to use on a task basis.
This file is processed each time a mission information is received by MMT.

